TODO ObjectManager
==================


ObjectManager is loosely based on some mockups and ideas:

- http://jesseross.com/clients/etoile/ui/concepts/03/workspace_100.jpg

- http://jesseross.com/clients/etoile/ui/interface/800x480.png

- http://jesseross.com/clients/etoile/ui/concepts/01/workspace_300.jpg

- http://jesseross.com/clients/etoile/ui/concepts/02/workspace_400.jpg


Current Work
------------

- Fix manager window title

- Fix lock error logged in the console

- Fix Show Inspector crash

- Fix Tag Filter crash when becoming first responder

- Improve Tag Filter Filter to give up the focus on a cancel button click (see the Search field behavior in Mac OS X Finder)

	- Requires a custom EtoileUI control or a NSSearchFieldCell subclass that implements this behavior (there is no delegate API to do so)

- Fix Icon View crash

- Force grid alignment in the Icon View (letting the user positions icons seems useless)

- Finish Search support in History Browser

- Improve History Browser title


Missing Features
----------------

- Opening Objects (using UTIs to decide which service we use)

	- Requires some service registry to bind editors/viewers to UTIs
	
	- Implement Open in History Browser (for opening a past version)

- Opening other stores than the default one

	- Add 'Open Other CoreObject Store…' to the Application menu
	
		- Once a CoreObject Store is picked in the Open panel, a new manager window appears
		
	- Needs some badges or hints (perhaps in the titlebar) to indicate which manager windows relate to which stores
	
- New Object From Template…

	- Add a template picker to EtoileUI

- Pick and drop to move objects around

	- Link (default)
	- Copy (option key)
	- Move (command + option key or perhaps just command key)

- Deleted objects smart group and Object Undeletion

- Time-based smart groups (in When section of the source list)

- Import/Export. ObjectManager should support just few basic types at least initially:

	- Bookmark
	- Image
	- ?

- Support opening multiple manager windows

- Fine-grained control over the grid used in the Icon View

- Note Management 

	- Note Library
	
	- Notes can include Lists e.g. Todo or Buy lists.

	- Simple Note View (actived if the Notes library is selected)
	
		- Something similar to Google Keep but a bit smarter and with a better usability

		- Would provide a very basic Outliner to edit lists
		
	- Notes can be opened in a real Outliner (notes are just normal outliner documents) or a Structured Text Editor
	
	- Full-blown Outliner documents can be browsed in the ObjectManager (using the Note View or the List  view)


Future Work
-----------

- Library Management (creation, deletion, export and import)

- Temporal Search against the store 
	
	- For now we just support searching the latest object revisions in memory

- Device Representations e.g. external hard disks

- Filesystem Browsing (as an advanced option) using COFile and CODirectory

- Activity Reporting to track and manage progresses copy, deletion, downloads, etc. in a Unified UI

	- Either in the ObjectManager itself or in a distinct application (e.g. Activity Manager)
	
	- Etoile or CoreObject-based applications can use this UI to report about their background tasks
	
		- Provide a special COObject subclass in CoreObject or EtoileUI to report progresses (e.g. CO(User)Operation). This would let us use the store as persistent distributed notification center. For example, a WebBrowser makes a new commit on a COUserOperation instance each time, the download progresses a bit, and the Activity Reporter automatically gets a store update as a result.
